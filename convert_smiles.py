import os
from rdkit import Chem
from rdkit.Chem import AllChem, SDWriter, Draw
from rdkit.Chem import inchi
import py3Dmol
import csv
import hashlib

def safe_filename(s):
    return hashlib.md5(s.encode('utf-8')).hexdigest()

TEMP_DIR = "temp_files"
if not os.path.exists(TEMP_DIR):
    os.makedirs(TEMP_DIR)

# Smiles --> Smiles
def smiles_to_smiles(smiles):
    csv_file = os.path.join(TEMP_DIR, f"smiles_{safe_filename(smiles)}.csv")
    with open(csv_file, mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(['SMILES'])
        writer.writerow([smiles])
    return smiles, csv_file

# Smiles --> InChi
def smiles_to_inchi(smiles):
    mol = Chem.MolFromSmiles(smiles)
    inchi_string = inchi.MolToInchi(mol)
    os.makedirs(TEMP_DIR, exist_ok=True)
    csv_file = os.path.join(TEMP_DIR, f"inchi_{safe_filename(smiles)}.csv")
    with open(csv_file, mode='w', newline='') as csv_file_handle:
        writer = csv.writer(csv_file_handle)
        writer.writerow(['InChI'])
        writer.writerow([inchi_string])
    return inchi_string, csv_file


# Smiles --> SDF (Visualization)
def smiles_sdf_visualize(smiles):
    mol = Chem.MolFromSmiles(smiles)
    mol = Chem.AddHs(mol)
    AllChem.EmbedMolecule(mol)
    AllChem.UFFOptimizeMolecule(mol)
    
    sdf_file = os.path.join(TEMP_DIR, 'output.sdf')
    writer = SDWriter(sdf_file)
    writer.write(mol)
    writer.close()

    img = Draw.MolToImage(mol, size=(300, 300))
    image_file = os.path.join(TEMP_DIR, f'output_sdf_{safe_filename(smiles)}.png')
    img.save(image_file)

    with open(sdf_file) as f:
        sdf_text = f.read()

    view = py3Dmol.view(width=400, height=400)
    view.addModel(sdf_text, 'sdf')
    view.setStyle({'stick': {}})
    view.zoomTo()
    html_3d = view._make_html()

    return sdf_file, image_file, html_3d

# Smiles --> XYZ (Visualization)
def smiles_to_xyz_visualize(smiles):
    mol = Chem.MolFromSmiles(smiles)
    mol = Chem.AddHs(mol)
    AllChem.EmbedMolecule(mol)
    AllChem.UFFOptimizeMolecule(mol)
    
    xyz_file = os.path.join(TEMP_DIR, f'output_{safe_filename(smiles)}.xyz')
    with open(xyz_file, 'w') as f:
        f.write(f"{mol.GetNumAtoms()}\n")
        f.write("Generated by RDKit\n")
        for atom in mol.GetAtoms():
            pos = mol.GetConformer().GetAtomPosition(atom.GetIdx())
            f.write(f"{atom.GetSymbol()} {pos.x:.4f} {pos.y:.4f} {pos.z:.4f}\n")

    img = Draw.MolToImage(mol, size=(300, 300))
    image_file = os.path.join(TEMP_DIR, f'output_xyz_{safe_filename(smiles)}.png')
    img.save(image_file)

    with open(xyz_file) as f:
        xyz_text = f.read()

    view = py3Dmol.view(width=400, height=400)
    view.addModel(xyz_text, 'xyz')
    view.setStyle({'stick': {}})
    view.zoomTo()
    html_3d = view._make_html()

    return xyz_file, image_file, html_3d
